server:
  port: 12345


spring:
  data:
    #============== ElasticSearch ===================
    elasticsearch:
      repositories:
        enabled: true # 启用 ElasticsearchTemplate
      cluster-name: docker-cluster    # ES集群名称，在elasticsearch.yml 中配置默 elasticsearch
      cluster-nodes: bjs-es:9300      # ES集群节点 用逗号分隔 , java连接默9300，http连接默9200
#      properties:
#        path:
#          logs: ./elasticsearch/log   # ES日志存储目录
#          data: ./elasticsearch/data  # ES数据存储目录
  elasticsearch:
    rest:
      uris: bjs-es:9200
  #============== kafka ===================
  # 指定kafka 代理地址，可以多个
  kafka:
    bootstrap-servers: bjs-kafka:9092
    producer:
      # 发生错误后，消息重发的次数
      retries: 0
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # ============================================================================================================
      # 保证投递成功
      # acks=0   ：生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1   ：只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 1
    consumer:
      # ============================================================================================================
      # 分组ID, 在监听中配置
      # group-id: learning-consumer-group
      # ============================================================================================================
      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      auto-commit-interval: 1S
      # ============================================================================================================
      # key和value的序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # ============================================================================================================
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      # ============================================================================================================
      # 是否自动提交偏移量,默认值是true,为了避免出现重复数据和数据丢失,可以把它设置为false, 然后手动提交偏移量
      enable-auto-commit: false
    listener:
      # ============================================================================================================
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      # ============================================================================================================
      #listner负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      missing-topics-fatal: false

#########################################################################
# 测试日志都为trace
#
#########################################################################
logging:
  level:
    com.jasmine: info # 全局配置
    com.jasmine.learingsb.factory: info          # 基于Spring的设计模式测试
  # =======================  middleware  ====================
    com.jasmine.learingsb.middleware: trace
    # ======================   aware   ======================
    com.jasmine.learingsb.config.aware: info
    # ====================== condition ======================
    com.jasmine.learingsb.config.condition: info
    com.jasmine.learingsb.config.condition.bean: info # 条件注解测试
    com.jasmine.learingsb.config.condition.clazz: info # 条件注解测试
    com.jasmine.learingsb.config.condition.expression: info # 条件注解测试
    com.jasmine.learingsb.config.condition.property: info # 条件注解测试
    # ====================== springboot-module-demo ======================
    # spring.factories 和自动配置测试
    com.jasmine.moduledemo: info
    com.jasmine.moduledemo.autoconfig.impot: info  # @Import
    com.jasmine.moduledemo.autoconfig.order: info  # @AutoConfigureAfter / @AutoConfigureBefore / @AutoConfigureOrder
    com.jasmine.moduledemo.autoconfig.pack: info   # @AutoConfigurationPackage / AutoConfigurationPackages
    com.jasmine.moduledemo.autoconfig.scan: info   # @ComponentScan


bjs:
  value:
    enabled: true
    id: 1
    name: jasmine
